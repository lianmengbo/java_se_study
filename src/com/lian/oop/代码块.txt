代码块：用来初始化类或者对象的信息


如果成员变量想要初始化的值不是一个硬编码的常量值，而是需要通过复杂的计算或读取文件、或读取运行环境信息等方式才能获取的一些值，该怎么办呢？
此时，可以考虑代码块（或初始化块）。

- 代码块(或初始化块)的`作用`：
 对Java类或对象进行初始化-
- 代码块(或初始化块)的`分类`：
  - 一个类中代码块若有修饰符，则只能被static修饰，称为静态代码块(static block)
  - 没有使用static修饰的，为非静态代码块。
  --静态代码块：
    1. 可以有输出语句。
    2. 可以对类的属性、类的声明进行初始化操作。
    3. 不可以对非静态的属性初始化。即：不可以调用非静态的属性和方法。
    4. 若有多个静态的代码块，那么按照从上到下的顺序依次执行。
    5. 静态代码块的执行要先于非静态代码块。
    6. 静态代码块随着类的加载而加载，且只执行一次。
  作用：初始化类信息（属性）--为静态变量初始化
  如果想要为静态变量初始化，可以直接在静态变量的声明后面直接赋值，也可以使用静态代码块。

  静态的方法内只能调用静态的属性以及方法！不能调用非静态的方法以及属性。
  非静态的方法内，可以调用静态的也可以调用非静态的。


  实例变量赋值顺序：
  1.默认初始化
  2.显示初始化
  3.代码块初始化
  4.构造器初始化
  5.对象创建后，对象.属性= ？ 进行赋值，或者set()方法
  其中2，3 显示初始化以及代码块初始化，按照代码顺序进行赋值

  静态代码块》非静态代码块
  对于存在继承的子夫类，代码块以及构造器的执行顺序？  由父及子，静态先行。
  父类静态代码块 > 子类静态代码块 > 父类普通代码块 > 父类构造器 > 子类普通代码块 > 子类构造器
